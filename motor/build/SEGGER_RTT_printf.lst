ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"SEGGER_RTT_printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._StoreChar,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	_StoreChar:
  24              	.LVL0:
  25              	.LFB0:
  26              		.file 1 "RTT/SEGGER_RTT_printf.c"
   1:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
   2:RTT/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:RTT/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:RTT/SEGGER_RTT_printf.c **** **********************************************************************
   5:RTT/SEGGER_RTT_printf.c **** *                                                                    *
   6:RTT/SEGGER_RTT_printf.c **** *            (c) 1995 - 2021 SEGGER Microcontroller GmbH             *
   7:RTT/SEGGER_RTT_printf.c **** *                                                                    *
   8:RTT/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  10:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  11:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  12:RTT/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  14:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  15:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  16:RTT/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  18:RTT/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:RTT/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:RTT/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  22:RTT/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:RTT/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:RTT/SEGGER_RTT_printf.c **** * condition is met:                                                  *
  25:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  26:RTT/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:RTT/SEGGER_RTT_printf.c **** *   notice, this condition and the following disclaimer.             *
  28:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  29:RTT/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:RTT/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:RTT/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:RTT/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 2


  33:RTT/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:RTT/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:RTT/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:RTT/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:RTT/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:RTT/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:RTT/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:RTT/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:RTT/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  42:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  43:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  44:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  45:RTT/SEGGER_RTT_printf.c **** *       RTT version: 7.86                                           *
  46:RTT/SEGGER_RTT_printf.c **** *                                                                    *
  47:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  48:RTT/SEGGER_RTT_printf.c **** 
  49:RTT/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  50:RTT/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  51:RTT/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  52:RTT/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
  53:RTT/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  54:RTT/SEGGER_RTT_printf.c **** */
  55:RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  56:RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  57:RTT/SEGGER_RTT_printf.c **** 
  58:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  59:RTT/SEGGER_RTT_printf.c **** *
  60:RTT/SEGGER_RTT_printf.c **** *       Defines, configurable
  61:RTT/SEGGER_RTT_printf.c **** *
  62:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  63:RTT/SEGGER_RTT_printf.c **** */
  64:RTT/SEGGER_RTT_printf.c **** 
  65:RTT/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  66:RTT/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  67:RTT/SEGGER_RTT_printf.c **** #endif
  68:RTT/SEGGER_RTT_printf.c **** 
  69:RTT/SEGGER_RTT_printf.c **** #include <stdlib.h>
  70:RTT/SEGGER_RTT_printf.c **** #include <stdarg.h>
  71:RTT/SEGGER_RTT_printf.c **** 
  72:RTT/SEGGER_RTT_printf.c **** 
  73:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  74:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  75:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  76:RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  77:RTT/SEGGER_RTT_printf.c **** 
  78:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  79:RTT/SEGGER_RTT_printf.c **** *
  80:RTT/SEGGER_RTT_printf.c **** *       Types
  81:RTT/SEGGER_RTT_printf.c **** *
  82:RTT/SEGGER_RTT_printf.c **** **********************************************************************
  83:RTT/SEGGER_RTT_printf.c **** */
  84:RTT/SEGGER_RTT_printf.c **** 
  85:RTT/SEGGER_RTT_printf.c **** typedef struct {
  86:RTT/SEGGER_RTT_printf.c ****   char*     pBuffer;
  87:RTT/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  88:RTT/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  89:RTT/SEGGER_RTT_printf.c **** 
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 3


  90:RTT/SEGGER_RTT_printf.c ****   int   ReturnValue;
  91:RTT/SEGGER_RTT_printf.c **** 
  92:RTT/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
  93:RTT/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  94:RTT/SEGGER_RTT_printf.c **** 
  95:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  96:RTT/SEGGER_RTT_printf.c **** *
  97:RTT/SEGGER_RTT_printf.c **** *       Function prototypes
  98:RTT/SEGGER_RTT_printf.c **** *
  99:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 100:RTT/SEGGER_RTT_printf.c **** */
 101:RTT/SEGGER_RTT_printf.c **** 
 102:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 103:RTT/SEGGER_RTT_printf.c **** *
 104:RTT/SEGGER_RTT_printf.c **** *       Static code
 105:RTT/SEGGER_RTT_printf.c **** *
 106:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 107:RTT/SEGGER_RTT_printf.c **** */
 108:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 109:RTT/SEGGER_RTT_printf.c **** *
 110:RTT/SEGGER_RTT_printf.c **** *       _StoreChar
 111:RTT/SEGGER_RTT_printf.c **** */
 112:RTT/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  27              		.loc 1 112 60 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 112 60 is_stmt 0 view .LVU1
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
 113:RTT/SEGGER_RTT_printf.c ****   unsigned Cnt;
  38              		.loc 1 113 3 is_stmt 1 view .LVU2
 114:RTT/SEGGER_RTT_printf.c **** 
 115:RTT/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  39              		.loc 1 115 3 view .LVU3
  40              		.loc 1 115 7 is_stmt 0 view .LVU4
  41 0004 8268     		ldr	r2, [r0, #8]
  42              	.LVL1:
 116:RTT/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  43              		.loc 1 116 3 is_stmt 1 view .LVU5
  44              		.loc 1 116 12 is_stmt 0 view .LVU6
  45 0006 531C     		adds	r3, r2, #1
  46              		.loc 1 116 22 view .LVU7
  47 0008 4068     		ldr	r0, [r0, #4]
  48              	.LVL2:
  49              		.loc 1 116 6 view .LVU8
  50 000a 8342     		cmp	r3, r0
  51 000c 05D8     		bhi	.L2
 117:RTT/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  52              		.loc 1 117 5 is_stmt 1 view .LVU9
  53              		.loc 1 117 8 is_stmt 0 view .LVU10
  54 000e 2068     		ldr	r0, [r4]
  55              		.loc 1 117 25 view .LVU11
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 4


  56 0010 8154     		strb	r1, [r0, r2]
 118:RTT/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  57              		.loc 1 118 5 is_stmt 1 view .LVU12
  58              		.loc 1 118 12 is_stmt 0 view .LVU13
  59 0012 A360     		str	r3, [r4, #8]
 119:RTT/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  60              		.loc 1 119 5 is_stmt 1 view .LVU14
  61              		.loc 1 119 6 is_stmt 0 view .LVU15
  62 0014 E368     		ldr	r3, [r4, #12]
  63              		.loc 1 119 19 view .LVU16
  64 0016 0133     		adds	r3, r3, #1
  65 0018 E360     		str	r3, [r4, #12]
  66              	.L2:
 120:RTT/SEGGER_RTT_printf.c ****   }
 121:RTT/SEGGER_RTT_printf.c ****   //
 122:RTT/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 123:RTT/SEGGER_RTT_printf.c ****   //
 124:RTT/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  67              		.loc 1 124 3 is_stmt 1 view .LVU17
  68              		.loc 1 124 8 is_stmt 0 view .LVU18
  69 001a A268     		ldr	r2, [r4, #8]
  70              	.LVL3:
  71              		.loc 1 124 18 view .LVU19
  72 001c 6368     		ldr	r3, [r4, #4]
  73              		.loc 1 124 6 view .LVU20
  74 001e 9A42     		cmp	r2, r3
  75 0020 00D0     		beq	.L6
  76              	.LVL4:
  77              	.L1:
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
 126:RTT/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 127:RTT/SEGGER_RTT_printf.c ****     } else {
 128:RTT/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 129:RTT/SEGGER_RTT_printf.c ****     }
 130:RTT/SEGGER_RTT_printf.c ****   }
 131:RTT/SEGGER_RTT_printf.c **** }
  78              		.loc 1 131 1 view .LVU21
  79 0022 10BD     		pop	{r4, pc}
  80              	.LVL5:
  81              	.L6:
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  82              		.loc 1 125 5 is_stmt 1 view .LVU22
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  83              		.loc 1 125 9 is_stmt 0 view .LVU23
  84 0024 2168     		ldr	r1, [r4]
  85              	.LVL6:
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  86              		.loc 1 125 9 view .LVU24
  87 0026 2069     		ldr	r0, [r4, #16]
  88 0028 FFF7FEFF 		bl	SEGGER_RTT_Write
  89              	.LVL7:
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  90              		.loc 1 125 69 view .LVU25
  91 002c A368     		ldr	r3, [r4, #8]
 125:RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  92              		.loc 1 125 8 view .LVU26
  93 002e 9842     		cmp	r0, r3
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 5


  94 0030 03D0     		beq	.L4
 126:RTT/SEGGER_RTT_printf.c ****     } else {
  95              		.loc 1 126 7 is_stmt 1 view .LVU27
 126:RTT/SEGGER_RTT_printf.c ****     } else {
  96              		.loc 1 126 22 is_stmt 0 view .LVU28
  97 0032 4FF0FF33 		mov	r3, #-1
  98 0036 E360     		str	r3, [r4, #12]
  99 0038 F3E7     		b	.L1
 100              	.L4:
 128:RTT/SEGGER_RTT_printf.c ****     }
 101              		.loc 1 128 7 is_stmt 1 view .LVU29
 128:RTT/SEGGER_RTT_printf.c ****     }
 102              		.loc 1 128 14 is_stmt 0 view .LVU30
 103 003a 0023     		movs	r3, #0
 104 003c A360     		str	r3, [r4, #8]
 105              		.loc 1 131 1 view .LVU31
 106 003e F0E7     		b	.L1
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.section	.text._PrintUnsigned,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 116              	_PrintUnsigned:
 117              	.LVL8:
 118              	.LFB1:
 132:RTT/SEGGER_RTT_printf.c **** 
 133:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 134:RTT/SEGGER_RTT_printf.c **** *
 135:RTT/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 136:RTT/SEGGER_RTT_printf.c **** */
 137:RTT/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 119              		.loc 1 137 156 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 8, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		.loc 1 137 156 is_stmt 0 view .LVU33
 124 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 40
 127              		.cfi_offset 3, -40
 128              		.cfi_offset 4, -36
 129              		.cfi_offset 5, -32
 130              		.cfi_offset 6, -28
 131              		.cfi_offset 7, -24
 132              		.cfi_offset 8, -20
 133              		.cfi_offset 9, -16
 134              		.cfi_offset 10, -12
 135              		.cfi_offset 11, -8
 136              		.cfi_offset 14, -4
 137 0004 8146     		mov	r9, r0
 138 0006 0F46     		mov	r7, r1
 139 0008 1546     		mov	r5, r2
 140 000a 1E46     		mov	r6, r3
 141 000c DDF828A0 		ldr	r10, [sp, #40]
 142 0010 0B9A     		ldr	r2, [sp, #44]
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 6


 143              	.LVL9:
 138:RTT/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 144              		.loc 1 138 3 is_stmt 1 view .LVU34
 139:RTT/SEGGER_RTT_printf.c ****   unsigned Div;
 145              		.loc 1 139 3 view .LVU35
 140:RTT/SEGGER_RTT_printf.c ****   unsigned Digit;
 146              		.loc 1 140 3 view .LVU36
 141:RTT/SEGGER_RTT_printf.c ****   unsigned Number;
 147              		.loc 1 141 3 view .LVU37
 142:RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 148              		.loc 1 142 3 view .LVU38
 143:RTT/SEGGER_RTT_printf.c ****   char c;
 149              		.loc 1 143 3 view .LVU39
 144:RTT/SEGGER_RTT_printf.c **** 
 145:RTT/SEGGER_RTT_printf.c ****   Number = v;
 150              		.loc 1 145 3 view .LVU40
 146:RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 151              		.loc 1 146 3 view .LVU41
 147:RTT/SEGGER_RTT_printf.c ****   //
 148:RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 149:RTT/SEGGER_RTT_printf.c ****   //
 150:RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 152              		.loc 1 150 3 view .LVU42
 151:RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 153              		.loc 1 151 3 view .LVU43
 145:RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 154              		.loc 1 145 10 is_stmt 0 view .LVU44
 155 0012 0B46     		mov	r3, r1
 156              	.LVL10:
 150:RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 157              		.loc 1 150 9 view .LVU45
 158 0014 4FF00108 		mov	r8, #1
 159              		.loc 1 151 9 view .LVU46
 160 0018 03E0     		b	.L8
 161              	.LVL11:
 162              	.L9:
 152:RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 163              		.loc 1 152 5 is_stmt 1 view .LVU47
 164              		.loc 1 152 12 is_stmt 0 view .LVU48
 165 001a B3FBF5F3 		udiv	r3, r3, r5
 166              	.LVL12:
 153:RTT/SEGGER_RTT_printf.c ****     Width++;
 167              		.loc 1 153 5 is_stmt 1 view .LVU49
 168              		.loc 1 153 10 is_stmt 0 view .LVU50
 169 001e 08F10108 		add	r8, r8, #1
 170              	.LVL13:
 171              	.L8:
 151:RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 172              		.loc 1 151 9 is_stmt 1 view .LVU51
 173 0022 AB42     		cmp	r3, r5
 174 0024 F9D2     		bcs	.L9
 154:RTT/SEGGER_RTT_printf.c ****   }
 155:RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 175              		.loc 1 155 3 view .LVU52
 176              		.loc 1 155 6 is_stmt 0 view .LVU53
 177 0026 B045     		cmp	r8, r6
 178 0028 00D2     		bcs	.L10
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 7


 156:RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 179              		.loc 1 156 11 view .LVU54
 180 002a B046     		mov	r8, r6
 181              	.LVL14:
 182              	.L10:
 157:RTT/SEGGER_RTT_printf.c ****   }
 158:RTT/SEGGER_RTT_printf.c ****   //
 159:RTT/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 160:RTT/SEGGER_RTT_printf.c ****   //
 161:RTT/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 183              		.loc 1 161 3 is_stmt 1 view .LVU55
 184              		.loc 1 161 6 is_stmt 0 view .LVU56
 185 002c 12F0010B 		ands	fp, r2, #1
 186 0030 18D1     		bne	.L11
 162:RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 187              		.loc 1 162 5 is_stmt 1 view .LVU57
 188              		.loc 1 162 8 is_stmt 0 view .LVU58
 189 0032 BAF1000F 		cmp	r10, #0
 190 0036 15D0     		beq	.L11
 163:RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 191              		.loc 1 163 7 is_stmt 1 view .LVU59
 192              		.loc 1 163 10 is_stmt 0 view .LVU60
 193 0038 12F0020F 		tst	r2, #2
 194 003c 02D0     		beq	.L24
 195              		.loc 1 163 74 discriminator 1 view .LVU61
 196 003e BEB1     		cbz	r6, .L25
 164:RTT/SEGGER_RTT_printf.c ****         c = '0';
 165:RTT/SEGGER_RTT_printf.c ****       } else {
 166:RTT/SEGGER_RTT_printf.c ****         c = ' ';
 197              		.loc 1 166 11 view .LVU62
 198 0040 2024     		movs	r4, #32
 199 0042 00E0     		b	.L13
 200              	.L24:
 201 0044 2024     		movs	r4, #32
 202              	.LVL15:
 203              	.L13:
 167:RTT/SEGGER_RTT_printf.c ****       }
 168:RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 204              		.loc 1 168 13 is_stmt 1 view .LVU63
 205 0046 BAF1000F 		cmp	r10, #0
 206 004a 0BD0     		beq	.L11
 207              		.loc 1 168 33 is_stmt 0 discriminator 1 view .LVU64
 208 004c C245     		cmp	r10, r8
 209 004e 09D9     		bls	.L11
 169:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 210              		.loc 1 169 9 is_stmt 1 view .LVU65
 211              		.loc 1 169 19 is_stmt 0 view .LVU66
 212 0050 0AF1FF3A 		add	r10, r10, #-1
 213              	.LVL16:
 170:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 214              		.loc 1 170 9 is_stmt 1 view .LVU67
 215 0054 2146     		mov	r1, r4
 216 0056 4846     		mov	r0, r9
 217 0058 FFF7FEFF 		bl	_StoreChar
 218              	.LVL17:
 171:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 219              		.loc 1 171 9 view .LVU68
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 8


 220              		.loc 1 171 24 is_stmt 0 view .LVU69
 221 005c D9F80C30 		ldr	r3, [r9, #12]
 222              		.loc 1 171 12 view .LVU70
 223 0060 002B     		cmp	r3, #0
 224 0062 F0DA     		bge	.L13
 225              	.LVL18:
 226              	.L11:
 172:RTT/SEGGER_RTT_printf.c ****           break;
 173:RTT/SEGGER_RTT_printf.c ****         }
 174:RTT/SEGGER_RTT_printf.c ****       }
 175:RTT/SEGGER_RTT_printf.c ****     }
 176:RTT/SEGGER_RTT_printf.c ****   }
 177:RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 227              		.loc 1 177 3 is_stmt 1 view .LVU71
 228              		.loc 1 177 18 is_stmt 0 view .LVU72
 229 0064 D9F80C30 		ldr	r3, [r9, #12]
 230              		.loc 1 177 6 view .LVU73
 231 0068 002B     		cmp	r3, #0
 232 006a 25DB     		blt	.L7
 146:RTT/SEGGER_RTT_printf.c ****   //
 233              		.loc 1 146 9 view .LVU74
 234 006c 0124     		movs	r4, #1
 235 006e 04E0     		b	.L19
 236              	.LVL19:
 237              	.L25:
 164:RTT/SEGGER_RTT_printf.c ****       } else {
 238              		.loc 1 164 11 view .LVU75
 239 0070 3024     		movs	r4, #48
 240 0072 E8E7     		b	.L13
 241              	.LVL20:
 242              	.L28:
 178:RTT/SEGGER_RTT_printf.c ****     //
 179:RTT/SEGGER_RTT_printf.c ****     // Compute Digit.
 180:RTT/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 181:RTT/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 182:RTT/SEGGER_RTT_printf.c ****     //
 183:RTT/SEGGER_RTT_printf.c ****     while (1) {
 184:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 185:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 243              		.loc 1 185 9 is_stmt 1 view .LVU76
 244              		.loc 1 185 18 is_stmt 0 view .LVU77
 245 0074 013E     		subs	r6, r6, #1
 246              	.LVL21:
 247              	.L17:
 186:RTT/SEGGER_RTT_printf.c ****       } else {
 187:RTT/SEGGER_RTT_printf.c ****         Div = v / Digit;
 188:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 189:RTT/SEGGER_RTT_printf.c ****           break;
 190:RTT/SEGGER_RTT_printf.c ****         }
 191:RTT/SEGGER_RTT_printf.c ****       }
 192:RTT/SEGGER_RTT_printf.c ****       Digit *= Base;
 248              		.loc 1 192 7 is_stmt 1 view .LVU78
 249              		.loc 1 192 13 is_stmt 0 view .LVU79
 250 0076 05FB04F4 		mul	r4, r5, r4
 251              	.LVL22:
 183:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 252              		.loc 1 183 11 is_stmt 1 view .LVU80
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 9


 253              	.L19:
 183:RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 254              		.loc 1 183 5 view .LVU81
 184:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 255              		.loc 1 184 7 view .LVU82
 184:RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 256              		.loc 1 184 10 is_stmt 0 view .LVU83
 257 007a 012E     		cmp	r6, #1
 258 007c FAD8     		bhi	.L28
 187:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 259              		.loc 1 187 9 is_stmt 1 view .LVU84
 187:RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 260              		.loc 1 187 13 is_stmt 0 view .LVU85
 261 007e B7FBF4F3 		udiv	r3, r7, r4
 262              	.LVL23:
 188:RTT/SEGGER_RTT_printf.c ****           break;
 263              		.loc 1 188 9 is_stmt 1 view .LVU86
 188:RTT/SEGGER_RTT_printf.c ****           break;
 264              		.loc 1 188 12 is_stmt 0 view .LVU87
 265 0082 9D42     		cmp	r5, r3
 266 0084 F7D9     		bls	.L17
 267 0086 00E0     		b	.L18
 268              	.LVL24:
 269              	.L26:
 193:RTT/SEGGER_RTT_printf.c ****     }
 194:RTT/SEGGER_RTT_printf.c ****     //
 195:RTT/SEGGER_RTT_printf.c ****     // Output digits
 196:RTT/SEGGER_RTT_printf.c ****     //
 197:RTT/SEGGER_RTT_printf.c ****     do {
 198:RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 199:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 200:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 201:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 202:RTT/SEGGER_RTT_printf.c ****         break;
 203:RTT/SEGGER_RTT_printf.c ****       }
 204:RTT/SEGGER_RTT_printf.c ****       Digit /= Base;
 270              		.loc 1 204 13 view .LVU88
 271 0088 1C46     		mov	r4, r3
 272              	.LVL25:
 273              	.L18:
 197:RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 274              		.loc 1 197 5 is_stmt 1 view .LVU89
 198:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 275              		.loc 1 198 7 view .LVU90
 198:RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 276              		.loc 1 198 11 is_stmt 0 view .LVU91
 277 008a B7FBF4F3 		udiv	r3, r7, r4
 278              	.LVL26:
 199:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 279              		.loc 1 199 7 is_stmt 1 view .LVU92
 280 008e 04FB1377 		mls	r7, r4, r3, r7
 281              	.LVL27:
 200:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 282              		.loc 1 200 7 view .LVU93
 283 0092 124A     		ldr	r2, .L29
 284 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 285 0096 4846     		mov	r0, r9
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 10


 286 0098 FFF7FEFF 		bl	_StoreChar
 287              	.LVL28:
 201:RTT/SEGGER_RTT_printf.c ****         break;
 288              		.loc 1 201 7 view .LVU94
 201:RTT/SEGGER_RTT_printf.c ****         break;
 289              		.loc 1 201 22 is_stmt 0 view .LVU95
 290 009c D9F80C30 		ldr	r3, [r9, #12]
 201:RTT/SEGGER_RTT_printf.c ****         break;
 291              		.loc 1 201 10 view .LVU96
 292 00a0 002B     		cmp	r3, #0
 293 00a2 03DB     		blt	.L20
 294              		.loc 1 204 7 is_stmt 1 view .LVU97
 295              		.loc 1 204 13 is_stmt 0 view .LVU98
 296 00a4 B4FBF5F3 		udiv	r3, r4, r5
 297              	.LVL29:
 205:RTT/SEGGER_RTT_printf.c ****     } while (Digit);
 298              		.loc 1 205 13 is_stmt 1 view .LVU99
 299              		.loc 1 205 5 is_stmt 0 view .LVU100
 300 00a8 AC42     		cmp	r4, r5
 301 00aa EDD2     		bcs	.L26
 302              	.LVL30:
 303              	.L20:
 206:RTT/SEGGER_RTT_printf.c ****     //
 207:RTT/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 208:RTT/SEGGER_RTT_printf.c ****     //
 209:RTT/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 304              		.loc 1 209 5 is_stmt 1 view .LVU101
 305              		.loc 1 209 8 is_stmt 0 view .LVU102
 306 00ac BBF1000F 		cmp	fp, #0
 307 00b0 02D0     		beq	.L7
 210:RTT/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 308              		.loc 1 210 7 is_stmt 1 view .LVU103
 309              		.loc 1 210 10 is_stmt 0 view .LVU104
 310 00b2 BAF1000F 		cmp	r10, #0
 311 00b6 01D1     		bne	.L21
 312              	.L7:
 211:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 212:RTT/SEGGER_RTT_printf.c ****           FieldWidth--;
 213:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 214:RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 215:RTT/SEGGER_RTT_printf.c ****             break;
 216:RTT/SEGGER_RTT_printf.c ****           }
 217:RTT/SEGGER_RTT_printf.c ****         }
 218:RTT/SEGGER_RTT_printf.c ****       }
 219:RTT/SEGGER_RTT_printf.c ****     }
 220:RTT/SEGGER_RTT_printf.c ****   }
 221:RTT/SEGGER_RTT_printf.c **** }
 313              		.loc 1 221 1 view .LVU105
 314 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 315              	.LVL31:
 316              	.L21:
 211:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 317              		.loc 1 211 15 is_stmt 1 view .LVU106
 318 00bc BAF1000F 		cmp	r10, #0
 319 00c0 FAD0     		beq	.L7
 211:RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 320              		.loc 1 211 35 is_stmt 0 discriminator 1 view .LVU107
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 11


 321 00c2 C245     		cmp	r10, r8
 322 00c4 F8D9     		bls	.L7
 212:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 323              		.loc 1 212 11 is_stmt 1 view .LVU108
 212:RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 324              		.loc 1 212 21 is_stmt 0 view .LVU109
 325 00c6 0AF1FF3A 		add	r10, r10, #-1
 326              	.LVL32:
 213:RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 327              		.loc 1 213 11 is_stmt 1 view .LVU110
 328 00ca 2021     		movs	r1, #32
 329 00cc 4846     		mov	r0, r9
 330 00ce FFF7FEFF 		bl	_StoreChar
 331              	.LVL33:
 214:RTT/SEGGER_RTT_printf.c ****             break;
 332              		.loc 1 214 11 view .LVU111
 214:RTT/SEGGER_RTT_printf.c ****             break;
 333              		.loc 1 214 26 is_stmt 0 view .LVU112
 334 00d2 D9F80C30 		ldr	r3, [r9, #12]
 214:RTT/SEGGER_RTT_printf.c ****             break;
 335              		.loc 1 214 14 view .LVU113
 336 00d6 002B     		cmp	r3, #0
 337 00d8 F0DA     		bge	.L21
 338 00da EDE7     		b	.L7
 339              	.L30:
 340              		.align	2
 341              	.L29:
 342 00dc 00000000 		.word	.LANCHOR0
 343              		.cfi_endproc
 344              	.LFE1:
 346              		.section	.text._PrintInt,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	_PrintInt:
 353              	.LVL34:
 354              	.LFB2:
 222:RTT/SEGGER_RTT_printf.c **** 
 223:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 224:RTT/SEGGER_RTT_printf.c **** *
 225:RTT/SEGGER_RTT_printf.c **** *       _PrintInt
 226:RTT/SEGGER_RTT_printf.c **** */
 227:RTT/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 355              		.loc 1 227 146 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 8, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 227 146 is_stmt 0 view .LVU115
 360 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 361              	.LCFI2:
 362              		.cfi_def_cfa_offset 32
 363              		.cfi_offset 4, -32
 364              		.cfi_offset 5, -28
 365              		.cfi_offset 6, -24
 366              		.cfi_offset 7, -20
 367              		.cfi_offset 8, -16
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 12


 368              		.cfi_offset 9, -12
 369              		.cfi_offset 10, -8
 370              		.cfi_offset 14, -4
 371 0004 82B0     		sub	sp, sp, #8
 372              	.LCFI3:
 373              		.cfi_def_cfa_offset 40
 374 0006 0746     		mov	r7, r0
 375 0008 8846     		mov	r8, r1
 376 000a 1546     		mov	r5, r2
 377 000c 9946     		mov	r9, r3
 378 000e 0A9E     		ldr	r6, [sp, #40]
 379 0010 DDF82CA0 		ldr	r10, [sp, #44]
 228:RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 380              		.loc 1 228 3 is_stmt 1 view .LVU116
 229:RTT/SEGGER_RTT_printf.c ****   int Number;
 381              		.loc 1 229 3 view .LVU117
 230:RTT/SEGGER_RTT_printf.c **** 
 231:RTT/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 382              		.loc 1 231 3 view .LVU118
 383              		.loc 1 231 10 is_stmt 0 view .LVU119
 384 0014 81EAE17C 		eor	ip, r1, r1, asr #31
 385 0018 ACEBE17C 		sub	ip, ip, r1, asr #31
 386              	.LVL35:
 232:RTT/SEGGER_RTT_printf.c **** 
 233:RTT/SEGGER_RTT_printf.c ****   //
 234:RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 235:RTT/SEGGER_RTT_printf.c ****   //
 236:RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 387              		.loc 1 236 3 is_stmt 1 view .LVU120
 237:RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 388              		.loc 1 237 3 view .LVU121
 236:RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 389              		.loc 1 236 9 is_stmt 0 view .LVU122
 390 001c 0124     		movs	r4, #1
 391              		.loc 1 237 9 view .LVU123
 392 001e 02E0     		b	.L32
 393              	.LVL36:
 394              	.L33:
 238:RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 395              		.loc 1 238 5 is_stmt 1 view .LVU124
 396              		.loc 1 238 12 is_stmt 0 view .LVU125
 397 0020 9CFBF5FC 		sdiv	ip, ip, r5
 398              	.LVL37:
 239:RTT/SEGGER_RTT_printf.c ****     Width++;
 399              		.loc 1 239 5 is_stmt 1 view .LVU126
 400              		.loc 1 239 10 is_stmt 0 view .LVU127
 401 0024 0134     		adds	r4, r4, #1
 402              	.LVL38:
 403              	.L32:
 237:RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 404              		.loc 1 237 9 is_stmt 1 view .LVU128
 405 0026 6545     		cmp	r5, ip
 406 0028 FADD     		ble	.L33
 240:RTT/SEGGER_RTT_printf.c ****   }
 241:RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 407              		.loc 1 241 3 view .LVU129
 408              		.loc 1 241 6 is_stmt 0 view .LVU130
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 13


 409 002a 4C45     		cmp	r4, r9
 410 002c 00D2     		bcs	.L34
 242:RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 411              		.loc 1 242 11 view .LVU131
 412 002e 4C46     		mov	r4, r9
 413              	.LVL39:
 414              	.L34:
 243:RTT/SEGGER_RTT_printf.c ****   }
 244:RTT/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 415              		.loc 1 244 3 is_stmt 1 view .LVU132
 416              		.loc 1 244 6 is_stmt 0 view .LVU133
 417 0030 36B1     		cbz	r6, .L35
 418              		.loc 1 244 25 discriminator 1 view .LVU134
 419 0032 B8F1000F 		cmp	r8, #0
 420 0036 02DB     		blt	.L36
 421              		.loc 1 244 37 discriminator 2 view .LVU135
 422 0038 1AF0040F 		tst	r10, #4
 423 003c 00D0     		beq	.L35
 424              	.L36:
 245:RTT/SEGGER_RTT_printf.c ****     FieldWidth--;
 425              		.loc 1 245 5 is_stmt 1 view .LVU136
 426              		.loc 1 245 15 is_stmt 0 view .LVU137
 427 003e 013E     		subs	r6, r6, #1
 428              	.LVL40:
 429              	.L35:
 246:RTT/SEGGER_RTT_printf.c ****   }
 247:RTT/SEGGER_RTT_printf.c **** 
 248:RTT/SEGGER_RTT_printf.c ****   //
 249:RTT/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 250:RTT/SEGGER_RTT_printf.c ****   //
 251:RTT/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 430              		.loc 1 251 3 is_stmt 1 view .LVU138
 431              		.loc 1 251 6 is_stmt 0 view .LVU139
 432 0040 1AF0020F 		tst	r10, #2
 433 0044 02D0     		beq	.L37
 434              		.loc 1 251 53 discriminator 2 view .LVU140
 435 0046 B9F1000F 		cmp	r9, #0
 436 004a 03D0     		beq	.L38
 437              	.L37:
 438              		.loc 1 251 75 discriminator 3 view .LVU141
 439 004c 1AF0010F 		tst	r10, #1
 440 0050 00D1     		bne	.L38
 252:RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 441              		.loc 1 252 5 is_stmt 1 view .LVU142
 442              		.loc 1 252 8 is_stmt 0 view .LVU143
 443 0052 AEB9     		cbnz	r6, .L39
 444              	.LVL41:
 445              	.L38:
 253:RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 254:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 255:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 256:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 257:RTT/SEGGER_RTT_printf.c ****           break;
 258:RTT/SEGGER_RTT_printf.c ****         }
 259:RTT/SEGGER_RTT_printf.c ****       }
 260:RTT/SEGGER_RTT_printf.c ****     }
 261:RTT/SEGGER_RTT_printf.c ****   }
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 14


 262:RTT/SEGGER_RTT_printf.c ****   //
 263:RTT/SEGGER_RTT_printf.c ****   // Print sign if necessary
 264:RTT/SEGGER_RTT_printf.c ****   //
 265:RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 446              		.loc 1 265 3 is_stmt 1 view .LVU144
 447              		.loc 1 265 18 is_stmt 0 view .LVU145
 448 0054 FB68     		ldr	r3, [r7, #12]
 449              		.loc 1 265 6 view .LVU146
 450 0056 002B     		cmp	r3, #0
 451 0058 0FDB     		blt	.L31
 266:RTT/SEGGER_RTT_printf.c ****     if (v < 0) {
 452              		.loc 1 266 5 is_stmt 1 view .LVU147
 453              		.loc 1 266 8 is_stmt 0 view .LVU148
 454 005a B8F1000F 		cmp	r8, #0
 455 005e 1CDB     		blt	.L49
 267:RTT/SEGGER_RTT_printf.c ****       v = -v;
 268:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 269:RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 456              		.loc 1 269 12 is_stmt 1 view .LVU149
 457              		.loc 1 269 15 is_stmt 0 view .LVU150
 458 0060 1AF0040F 		tst	r10, #4
 459 0064 20D1     		bne	.L50
 460              	.L43:
 270:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 271:RTT/SEGGER_RTT_printf.c ****     } else {
 272:RTT/SEGGER_RTT_printf.c **** 
 273:RTT/SEGGER_RTT_printf.c ****     }
 461              		.loc 1 273 5 is_stmt 1 view .LVU151
 274:RTT/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 462              		.loc 1 274 5 view .LVU152
 463              		.loc 1 274 20 is_stmt 0 view .LVU153
 464 0066 FB68     		ldr	r3, [r7, #12]
 465              		.loc 1 274 8 view .LVU154
 466 0068 002B     		cmp	r3, #0
 467 006a 06DB     		blt	.L31
 275:RTT/SEGGER_RTT_printf.c ****       //
 276:RTT/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 277:RTT/SEGGER_RTT_printf.c ****       //
 278:RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 468              		.loc 1 278 7 is_stmt 1 view .LVU155
 469              		.loc 1 278 74 is_stmt 0 view .LVU156
 470 006c 0AF00303 		and	r3, r10, #3
 471              		.loc 1 278 10 view .LVU157
 472 0070 022B     		cmp	r3, #2
 473 0072 1ED0     		beq	.L51
 474              	.L44:
 279:RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 280:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 281:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 282:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 283:RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 284:RTT/SEGGER_RTT_printf.c ****               break;
 285:RTT/SEGGER_RTT_printf.c ****             }
 286:RTT/SEGGER_RTT_printf.c ****           }
 287:RTT/SEGGER_RTT_printf.c ****         }
 288:RTT/SEGGER_RTT_printf.c ****       }
 289:RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 15


 475              		.loc 1 289 7 is_stmt 1 view .LVU158
 476              		.loc 1 289 22 is_stmt 0 view .LVU159
 477 0074 FB68     		ldr	r3, [r7, #12]
 478              		.loc 1 289 10 view .LVU160
 479 0076 002B     		cmp	r3, #0
 480 0078 2DDA     		bge	.L52
 481              	.L31:
 290:RTT/SEGGER_RTT_printf.c ****         //
 291:RTT/SEGGER_RTT_printf.c ****         // Print number without sign
 292:RTT/SEGGER_RTT_printf.c ****         //
 293:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 294:RTT/SEGGER_RTT_printf.c ****       }
 295:RTT/SEGGER_RTT_printf.c ****     }
 296:RTT/SEGGER_RTT_printf.c ****   }
 297:RTT/SEGGER_RTT_printf.c **** }
 482              		.loc 1 297 1 view .LVU161
 483 007a 02B0     		add	sp, sp, #8
 484              	.LCFI4:
 485              		.cfi_remember_state
 486              		.cfi_def_cfa_offset 32
 487              		@ sp needed
 488 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 489              	.LVL42:
 490              	.L39:
 491              	.LCFI5:
 492              		.cfi_restore_state
 253:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 493              		.loc 1 253 13 is_stmt 1 view .LVU162
 494 0080 002E     		cmp	r6, #0
 495 0082 E7D0     		beq	.L38
 253:RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 496              		.loc 1 253 33 is_stmt 0 discriminator 1 view .LVU163
 497 0084 A642     		cmp	r6, r4
 498 0086 E5D9     		bls	.L38
 254:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 499              		.loc 1 254 9 is_stmt 1 view .LVU164
 254:RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 500              		.loc 1 254 19 is_stmt 0 view .LVU165
 501 0088 013E     		subs	r6, r6, #1
 502              	.LVL43:
 255:RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 503              		.loc 1 255 9 is_stmt 1 view .LVU166
 504 008a 2021     		movs	r1, #32
 505 008c 3846     		mov	r0, r7
 506 008e FFF7FEFF 		bl	_StoreChar
 507              	.LVL44:
 256:RTT/SEGGER_RTT_printf.c ****           break;
 508              		.loc 1 256 9 view .LVU167
 256:RTT/SEGGER_RTT_printf.c ****           break;
 509              		.loc 1 256 24 is_stmt 0 view .LVU168
 510 0092 FB68     		ldr	r3, [r7, #12]
 256:RTT/SEGGER_RTT_printf.c ****           break;
 511              		.loc 1 256 12 view .LVU169
 512 0094 002B     		cmp	r3, #0
 513 0096 F3DA     		bge	.L39
 514 0098 DCE7     		b	.L38
 515              	.L49:
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 16


 267:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 516              		.loc 1 267 7 is_stmt 1 view .LVU170
 267:RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 517              		.loc 1 267 9 is_stmt 0 view .LVU171
 518 009a C8F10008 		rsb	r8, r8, #0
 519              	.LVL45:
 268:RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 520              		.loc 1 268 7 is_stmt 1 view .LVU172
 521 009e 2D21     		movs	r1, #45
 522 00a0 3846     		mov	r0, r7
 523 00a2 FFF7FEFF 		bl	_StoreChar
 524              	.LVL46:
 525 00a6 DEE7     		b	.L43
 526              	.L50:
 270:RTT/SEGGER_RTT_printf.c ****     } else {
 527              		.loc 1 270 7 view .LVU173
 528 00a8 2B21     		movs	r1, #43
 529 00aa 3846     		mov	r0, r7
 530 00ac FFF7FEFF 		bl	_StoreChar
 531              	.LVL47:
 532 00b0 D9E7     		b	.L43
 533              	.L51:
 278:RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 534              		.loc 1 278 126 is_stmt 0 discriminator 1 view .LVU174
 535 00b2 B9F1000F 		cmp	r9, #0
 536 00b6 DDD1     		bne	.L44
 279:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 537              		.loc 1 279 9 is_stmt 1 view .LVU175
 279:RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 538              		.loc 1 279 12 is_stmt 0 view .LVU176
 539 00b8 002E     		cmp	r6, #0
 540 00ba DBD0     		beq	.L44
 541              	.L45:
 280:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 542              		.loc 1 280 17 is_stmt 1 view .LVU177
 543 00bc 002E     		cmp	r6, #0
 544 00be D9D0     		beq	.L44
 280:RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 545              		.loc 1 280 37 is_stmt 0 discriminator 1 view .LVU178
 546 00c0 A642     		cmp	r6, r4
 547 00c2 D7D9     		bls	.L44
 281:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 548              		.loc 1 281 13 is_stmt 1 view .LVU179
 281:RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 549              		.loc 1 281 23 is_stmt 0 view .LVU180
 550 00c4 013E     		subs	r6, r6, #1
 551              	.LVL48:
 282:RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 552              		.loc 1 282 13 is_stmt 1 view .LVU181
 553 00c6 3021     		movs	r1, #48
 554 00c8 3846     		mov	r0, r7
 555 00ca FFF7FEFF 		bl	_StoreChar
 556              	.LVL49:
 283:RTT/SEGGER_RTT_printf.c ****               break;
 557              		.loc 1 283 13 view .LVU182
 283:RTT/SEGGER_RTT_printf.c ****               break;
 558              		.loc 1 283 28 is_stmt 0 view .LVU183
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 17


 559 00ce FB68     		ldr	r3, [r7, #12]
 283:RTT/SEGGER_RTT_printf.c ****               break;
 560              		.loc 1 283 16 view .LVU184
 561 00d0 002B     		cmp	r3, #0
 562 00d2 F3DA     		bge	.L45
 563 00d4 CEE7     		b	.L44
 564              	.L52:
 293:RTT/SEGGER_RTT_printf.c ****       }
 565              		.loc 1 293 9 is_stmt 1 view .LVU185
 566 00d6 CDF804A0 		str	r10, [sp, #4]
 567 00da 0096     		str	r6, [sp]
 568 00dc 4B46     		mov	r3, r9
 569 00de 2A46     		mov	r2, r5
 570 00e0 4146     		mov	r1, r8
 571 00e2 3846     		mov	r0, r7
 572 00e4 FFF7FEFF 		bl	_PrintUnsigned
 573              	.LVL50:
 574              		.loc 1 297 1 is_stmt 0 view .LVU186
 575 00e8 C7E7     		b	.L31
 576              		.cfi_endproc
 577              	.LFE2:
 579              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 580              		.align	1
 581              		.global	SEGGER_RTT_vprintf
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	SEGGER_RTT_vprintf:
 587              	.LVL51:
 588              	.LFB3:
 298:RTT/SEGGER_RTT_printf.c **** 
 299:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 300:RTT/SEGGER_RTT_printf.c **** *
 301:RTT/SEGGER_RTT_printf.c **** *       Public code
 302:RTT/SEGGER_RTT_printf.c **** *
 303:RTT/SEGGER_RTT_printf.c **** **********************************************************************
 304:RTT/SEGGER_RTT_printf.c **** */
 305:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 306:RTT/SEGGER_RTT_printf.c **** *
 307:RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 308:RTT/SEGGER_RTT_printf.c **** *
 309:RTT/SEGGER_RTT_printf.c **** *  Function description
 310:RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 311:RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 312:RTT/SEGGER_RTT_printf.c **** *
 313:RTT/SEGGER_RTT_printf.c **** *  Parameters
 314:RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 315:RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 316:RTT/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 317:RTT/SEGGER_RTT_printf.c **** *
 318:RTT/SEGGER_RTT_printf.c **** *  Return values
 319:RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 320:RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 321:RTT/SEGGER_RTT_printf.c **** */
 322:RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 589              		.loc 1 322 90 is_stmt 1 view -0
 590              		.cfi_startproc
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 18


 591              		@ args = 0, pretend = 0, frame = 88
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		.loc 1 322 90 is_stmt 0 view .LVU188
 594 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 595              	.LCFI6:
 596              		.cfi_def_cfa_offset 20
 597              		.cfi_offset 4, -20
 598              		.cfi_offset 5, -16
 599              		.cfi_offset 6, -12
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 99B0     		sub	sp, sp, #100
 603              	.LCFI7:
 604              		.cfi_def_cfa_offset 120
 605 0004 0646     		mov	r6, r0
 606 0006 0C46     		mov	r4, r1
 607 0008 1546     		mov	r5, r2
 323:RTT/SEGGER_RTT_printf.c ****   char c;
 608              		.loc 1 323 3 is_stmt 1 view .LVU189
 324:RTT/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 609              		.loc 1 324 3 view .LVU190
 325:RTT/SEGGER_RTT_printf.c ****   int v;
 610              		.loc 1 325 3 view .LVU191
 326:RTT/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 611              		.loc 1 326 3 view .LVU192
 327:RTT/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 612              		.loc 1 327 3 view .LVU193
 328:RTT/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 613              		.loc 1 328 3 view .LVU194
 329:RTT/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 614              		.loc 1 329 3 view .LVU195
 330:RTT/SEGGER_RTT_printf.c **** 
 331:RTT/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 615              		.loc 1 331 3 view .LVU196
 616              		.loc 1 331 29 is_stmt 0 view .LVU197
 617 000a 03AB     		add	r3, sp, #12
 618 000c 1393     		str	r3, [sp, #76]
 332:RTT/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 619              		.loc 1 332 3 is_stmt 1 view .LVU198
 620              		.loc 1 332 29 is_stmt 0 view .LVU199
 621 000e 4023     		movs	r3, #64
 622 0010 1493     		str	r3, [sp, #80]
 333:RTT/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 623              		.loc 1 333 3 is_stmt 1 view .LVU200
 624              		.loc 1 333 29 is_stmt 0 view .LVU201
 625 0012 0023     		movs	r3, #0
 626 0014 1593     		str	r3, [sp, #84]
 334:RTT/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 627              		.loc 1 334 3 is_stmt 1 view .LVU202
 628              		.loc 1 334 29 is_stmt 0 view .LVU203
 629 0016 1790     		str	r0, [sp, #92]
 335:RTT/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 630              		.loc 1 335 3 is_stmt 1 view .LVU204
 631              		.loc 1 335 29 is_stmt 0 view .LVU205
 632 0018 1693     		str	r3, [sp, #88]
 633 001a 8AE0     		b	.L81
 634              	.LVL52:
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 19


 635              	.L89:
 336:RTT/SEGGER_RTT_printf.c **** 
 337:RTT/SEGGER_RTT_printf.c ****   do {
 338:RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 339:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 340:RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 341:RTT/SEGGER_RTT_printf.c ****       break;
 342:RTT/SEGGER_RTT_printf.c ****     }
 343:RTT/SEGGER_RTT_printf.c ****     if (c == '%') {
 344:RTT/SEGGER_RTT_printf.c ****       //
 345:RTT/SEGGER_RTT_printf.c ****       // Filter out flags
 346:RTT/SEGGER_RTT_printf.c ****       //
 347:RTT/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 636              		.loc 1 347 19 view .LVU206
 637 001c 0020     		movs	r0, #0
 348:RTT/SEGGER_RTT_printf.c ****       v = 1;
 638              		.loc 1 348 9 view .LVU207
 639 001e 0122     		movs	r2, #1
 640 0020 11E0     		b	.L62
 641              	.LVL53:
 642              	.L59:
 349:RTT/SEGGER_RTT_printf.c ****       do {
 350:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 351:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 352:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 643              		.loc 1 352 19 is_stmt 1 view .LVU208
 644              		.loc 1 352 31 is_stmt 0 view .LVU209
 645 0022 40F00100 		orr	r0, r0, #1
 646              	.LVL54:
 647              		.loc 1 352 60 is_stmt 1 view .LVU210
 648              		.loc 1 352 67 is_stmt 0 view .LVU211
 649 0026 0134     		adds	r4, r4, #1
 650              	.LVL55:
 651              		.loc 1 352 71 is_stmt 1 view .LVU212
 652              		.loc 1 352 9 is_stmt 0 view .LVU213
 653 0028 0CE0     		b	.L56
 654              	.L57:
 353:RTT/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 655              		.loc 1 353 19 is_stmt 1 view .LVU214
 656              		.loc 1 353 31 is_stmt 0 view .LVU215
 657 002a 40F00200 		orr	r0, r0, #2
 658              	.LVL56:
 659              		.loc 1 353 60 is_stmt 1 view .LVU216
 660              		.loc 1 353 67 is_stmt 0 view .LVU217
 661 002e 0134     		adds	r4, r4, #1
 662              	.LVL57:
 663              		.loc 1 353 71 is_stmt 1 view .LVU218
 664              		.loc 1 353 9 is_stmt 0 view .LVU219
 665 0030 08E0     		b	.L56
 666              	.L60:
 354:RTT/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 667              		.loc 1 354 19 is_stmt 1 view .LVU220
 668              		.loc 1 354 31 is_stmt 0 view .LVU221
 669 0032 40F00400 		orr	r0, r0, #4
 670              	.LVL58:
 671              		.loc 1 354 60 is_stmt 1 view .LVU222
 672              		.loc 1 354 67 is_stmt 0 view .LVU223
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 20


 673 0036 0134     		adds	r4, r4, #1
 674              	.LVL59:
 675              		.loc 1 354 71 is_stmt 1 view .LVU224
 676              		.loc 1 354 9 is_stmt 0 view .LVU225
 677 0038 04E0     		b	.L56
 678              	.L61:
 355:RTT/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 679              		.loc 1 355 19 is_stmt 1 view .LVU226
 680              		.loc 1 355 31 is_stmt 0 view .LVU227
 681 003a 40F00800 		orr	r0, r0, #8
 682              	.LVL60:
 683              		.loc 1 355 60 is_stmt 1 view .LVU228
 684              		.loc 1 355 67 is_stmt 0 view .LVU229
 685 003e 0134     		adds	r4, r4, #1
 686              	.LVL61:
 687              		.loc 1 355 71 is_stmt 1 view .LVU230
 688              		.loc 1 355 9 is_stmt 0 view .LVU231
 689 0040 00E0     		b	.L56
 690              	.L84:
 351:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 691              		.loc 1 351 9 view .LVU232
 692 0042 0022     		movs	r2, #0
 693              	.LVL62:
 694              	.L56:
 356:RTT/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 357:RTT/SEGGER_RTT_printf.c ****         }
 358:RTT/SEGGER_RTT_printf.c ****       } while (v);
 695              		.loc 1 358 15 is_stmt 1 view .LVU233
 696              		.loc 1 358 7 is_stmt 0 view .LVU234
 697 0044 12B3     		cbz	r2, .L64
 698              	.LVL63:
 699              	.L62:
 349:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 700              		.loc 1 349 7 is_stmt 1 view .LVU235
 350:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 701              		.loc 1 350 9 view .LVU236
 350:RTT/SEGGER_RTT_printf.c ****         switch (c) {
 702              		.loc 1 350 11 is_stmt 0 view .LVU237
 703 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 704              	.LVL64:
 351:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 705              		.loc 1 351 9 is_stmt 1 view .LVU238
 706 0048 233B     		subs	r3, r3, #35
 707              	.LVL65:
 351:RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 708              		.loc 1 351 9 is_stmt 0 view .LVU239
 709 004a 0D2B     		cmp	r3, #13
 710 004c F9D8     		bhi	.L84
 711 004e 01A1     		adr	r1, .L58
 712 0050 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 713              		.p2align 2
 714              	.L58:
 715 0054 3B000000 		.word	.L61+1
 716 0058 43000000 		.word	.L84+1
 717 005c 43000000 		.word	.L84+1
 718 0060 43000000 		.word	.L84+1
 719 0064 43000000 		.word	.L84+1
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 21


 720 0068 43000000 		.word	.L84+1
 721 006c 43000000 		.word	.L84+1
 722 0070 43000000 		.word	.L84+1
 723 0074 33000000 		.word	.L60+1
 724 0078 43000000 		.word	.L84+1
 725 007c 23000000 		.word	.L59+1
 726 0080 43000000 		.word	.L84+1
 727 0084 43000000 		.word	.L84+1
 728 0088 2B000000 		.word	.L57+1
 729              	.LVL66:
 730              		.p2align 1
 731              	.L64:
 359:RTT/SEGGER_RTT_printf.c ****       //
 360:RTT/SEGGER_RTT_printf.c ****       // filter out field with
 361:RTT/SEGGER_RTT_printf.c ****       //
 362:RTT/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 363:RTT/SEGGER_RTT_printf.c ****       do {
 732              		.loc 1 363 7 is_stmt 1 view .LVU240
 364:RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 733              		.loc 1 364 9 view .LVU241
 734              		.loc 1 364 11 is_stmt 0 view .LVU242
 735 008c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 736              	.LVL67:
 365:RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 737              		.loc 1 365 9 is_stmt 1 view .LVU243
 738              		.loc 1 365 23 is_stmt 0 view .LVU244
 739 008e A3F13001 		sub	r1, r3, #48
 740 0092 C9B2     		uxtb	r1, r1
 741              		.loc 1 365 12 view .LVU245
 742 0094 0929     		cmp	r1, #9
 743 0096 07D8     		bhi	.L63
 366:RTT/SEGGER_RTT_printf.c ****           break;
 367:RTT/SEGGER_RTT_printf.c ****         }
 368:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 744              		.loc 1 368 9 is_stmt 1 view .LVU246
 745              		.loc 1 368 16 is_stmt 0 view .LVU247
 746 0098 0134     		adds	r4, r4, #1
 747              	.LVL68:
 369:RTT/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 748              		.loc 1 369 9 is_stmt 1 view .LVU248
 749              		.loc 1 369 34 is_stmt 0 view .LVU249
 750 009a 02EB8202 		add	r2, r2, r2, lsl #2
 751              	.LVL69:
 752              		.loc 1 369 41 view .LVU250
 753 009e 03EB4203 		add	r3, r3, r2, lsl #1
 754              	.LVL70:
 755              		.loc 1 369 20 view .LVU251
 756 00a2 A3F13002 		sub	r2, r3, #48
 757              	.LVL71:
 370:RTT/SEGGER_RTT_printf.c ****       } while (1);
 758              		.loc 1 370 15 is_stmt 1 view .LVU252
 364:RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 759              		.loc 1 364 11 is_stmt 0 view .LVU253
 760 00a6 F1E7     		b	.L64
 761              	.LVL72:
 762              	.L63:
 371:RTT/SEGGER_RTT_printf.c **** 
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 22


 372:RTT/SEGGER_RTT_printf.c ****       //
 373:RTT/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 374:RTT/SEGGER_RTT_printf.c ****       //
 375:RTT/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 763              		.loc 1 375 7 is_stmt 1 view .LVU254
 376:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 764              		.loc 1 376 7 view .LVU255
 377:RTT/SEGGER_RTT_printf.c ****       if (c == '.') {
 765              		.loc 1 377 7 view .LVU256
 766              		.loc 1 377 10 is_stmt 0 view .LVU257
 767 00a8 2E2B     		cmp	r3, #46
 768 00aa 02D0     		beq	.L87
 375:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 769              		.loc 1 375 17 view .LVU258
 770 00ac 0023     		movs	r3, #0
 771              	.LVL73:
 772              	.L65:
 378:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 379:RTT/SEGGER_RTT_printf.c ****         do {
 380:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 381:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 382:RTT/SEGGER_RTT_printf.c ****             break;
 383:RTT/SEGGER_RTT_printf.c ****           }
 384:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 385:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 386:RTT/SEGGER_RTT_printf.c ****         } while (1);
 387:RTT/SEGGER_RTT_printf.c ****       }
 388:RTT/SEGGER_RTT_printf.c ****       //
 389:RTT/SEGGER_RTT_printf.c ****       // Filter out length modifier
 390:RTT/SEGGER_RTT_printf.c ****       //
 391:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 773              		.loc 1 391 7 is_stmt 1 view .LVU259
 774              		.loc 1 391 9 is_stmt 0 view .LVU260
 775 00ae 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 776              	.LVL74:
 777              		.loc 1 391 9 view .LVU261
 778 00b0 13E0     		b	.L69
 779              	.LVL75:
 780              	.L87:
 378:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 781              		.loc 1 378 9 is_stmt 1 view .LVU262
 378:RTT/SEGGER_RTT_printf.c ****         sFormat++;
 782              		.loc 1 378 16 is_stmt 0 view .LVU263
 783 00b2 0134     		adds	r4, r4, #1
 784              	.LVL76:
 375:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 785              		.loc 1 375 17 view .LVU264
 786 00b4 0023     		movs	r3, #0
 787              	.LVL77:
 375:RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 788              		.loc 1 375 17 view .LVU265
 789 00b6 05E0     		b	.L66
 790              	.LVL78:
 791              	.L88:
 384:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 792              		.loc 1 384 11 is_stmt 1 view .LVU266
 384:RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 23


 793              		.loc 1 384 18 is_stmt 0 view .LVU267
 794 00b8 0134     		adds	r4, r4, #1
 795              	.LVL79:
 385:RTT/SEGGER_RTT_printf.c ****         } while (1);
 796              		.loc 1 385 11 is_stmt 1 view .LVU268
 385:RTT/SEGGER_RTT_printf.c ****         } while (1);
 797              		.loc 1 385 33 is_stmt 0 view .LVU269
 798 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 799              	.LVL80:
 385:RTT/SEGGER_RTT_printf.c ****         } while (1);
 800              		.loc 1 385 39 view .LVU270
 801 00be 01EB4303 		add	r3, r1, r3, lsl #1
 385:RTT/SEGGER_RTT_printf.c ****         } while (1);
 802              		.loc 1 385 21 view .LVU271
 803 00c2 303B     		subs	r3, r3, #48
 804              	.LVL81:
 386:RTT/SEGGER_RTT_printf.c ****       }
 805              		.loc 1 386 17 is_stmt 1 view .LVU272
 806              	.L66:
 379:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 807              		.loc 1 379 9 view .LVU273
 380:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 808              		.loc 1 380 11 view .LVU274
 380:RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 809              		.loc 1 380 13 is_stmt 0 view .LVU275
 810 00c4 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 811              	.LVL82:
 381:RTT/SEGGER_RTT_printf.c ****             break;
 812              		.loc 1 381 11 is_stmt 1 view .LVU276
 381:RTT/SEGGER_RTT_printf.c ****             break;
 813              		.loc 1 381 25 is_stmt 0 view .LVU277
 814 00c6 A1F1300C 		sub	ip, r1, #48
 815 00ca 5FFA8CFC 		uxtb	ip, ip
 381:RTT/SEGGER_RTT_printf.c ****             break;
 816              		.loc 1 381 14 view .LVU278
 817 00ce BCF1090F 		cmp	ip, #9
 818 00d2 F1D9     		bls	.L88
 381:RTT/SEGGER_RTT_printf.c ****             break;
 819              		.loc 1 381 14 view .LVU279
 820 00d4 EBE7     		b	.L65
 821              	.L67:
 392:RTT/SEGGER_RTT_printf.c ****       do {
 393:RTT/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 394:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 822              		.loc 1 394 11 is_stmt 1 view .LVU280
 823              	.LVL83:
 395:RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 824              		.loc 1 395 11 view .LVU281
 825              		.loc 1 395 13 is_stmt 0 view .LVU282
 826 00d6 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 827              	.LVL84:
 396:RTT/SEGGER_RTT_printf.c ****         } else {
 397:RTT/SEGGER_RTT_printf.c ****           break;
 398:RTT/SEGGER_RTT_printf.c ****         }
 399:RTT/SEGGER_RTT_printf.c ****       } while (1);
 828              		.loc 1 399 15 is_stmt 1 view .LVU283
 829              	.L69:
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 24


 392:RTT/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 830              		.loc 1 392 7 view .LVU284
 393:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 831              		.loc 1 393 9 view .LVU285
 393:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 832              		.loc 1 393 12 is_stmt 0 view .LVU286
 833 00da 6C29     		cmp	r1, #108
 834 00dc FBD0     		beq	.L67
 393:RTT/SEGGER_RTT_printf.c ****           sFormat++;
 835              		.loc 1 393 24 discriminator 1 view .LVU287
 836 00de 6829     		cmp	r1, #104
 837 00e0 F9D0     		beq	.L67
 400:RTT/SEGGER_RTT_printf.c ****       //
 401:RTT/SEGGER_RTT_printf.c ****       // Handle specifiers
 402:RTT/SEGGER_RTT_printf.c ****       //
 403:RTT/SEGGER_RTT_printf.c ****       switch (c) {
 838              		.loc 1 403 7 is_stmt 1 view .LVU288
 839 00e2 2529     		cmp	r1, #37
 840 00e4 6DD0     		beq	.L70
 841 00e6 20D3     		bcc	.L71
 842 00e8 7829     		cmp	r1, #120
 843 00ea 1ED8     		bhi	.L71
 844 00ec 5829     		cmp	r1, #88
 845 00ee 1CD3     		bcc	.L71
 846 00f0 5839     		subs	r1, r1, #88
 847              	.LVL85:
 848              		.loc 1 403 7 is_stmt 0 view .LVU289
 849 00f2 2029     		cmp	r1, #32
 850 00f4 19D8     		bhi	.L71
 851 00f6 DFE801F0 		tbb	[pc, r1]
 852              	.L73:
 853 00fa 3D       		.byte	(.L72-.L73)/2
 854 00fb 18       		.byte	(.L71-.L73)/2
 855 00fc 18       		.byte	(.L71-.L73)/2
 856 00fd 18       		.byte	(.L71-.L73)/2
 857 00fe 18       		.byte	(.L71-.L73)/2
 858 00ff 18       		.byte	(.L71-.L73)/2
 859 0100 18       		.byte	(.L71-.L73)/2
 860 0101 18       		.byte	(.L71-.L73)/2
 861 0102 18       		.byte	(.L71-.L73)/2
 862 0103 18       		.byte	(.L71-.L73)/2
 863 0104 18       		.byte	(.L71-.L73)/2
 864 0105 11       		.byte	(.L78-.L73)/2
 865 0106 27       		.byte	(.L77-.L73)/2
 866 0107 18       		.byte	(.L71-.L73)/2
 867 0108 18       		.byte	(.L71-.L73)/2
 868 0109 18       		.byte	(.L71-.L73)/2
 869 010a 18       		.byte	(.L71-.L73)/2
 870 010b 18       		.byte	(.L71-.L73)/2
 871 010c 18       		.byte	(.L71-.L73)/2
 872 010d 18       		.byte	(.L71-.L73)/2
 873 010e 18       		.byte	(.L71-.L73)/2
 874 010f 18       		.byte	(.L71-.L73)/2
 875 0110 18       		.byte	(.L71-.L73)/2
 876 0111 18       		.byte	(.L71-.L73)/2
 877 0112 57       		.byte	(.L76-.L73)/2
 878 0113 18       		.byte	(.L71-.L73)/2
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 25


 879 0114 18       		.byte	(.L71-.L73)/2
 880 0115 48       		.byte	(.L75-.L73)/2
 881 0116 18       		.byte	(.L71-.L73)/2
 882 0117 32       		.byte	(.L74-.L73)/2
 883 0118 18       		.byte	(.L71-.L73)/2
 884 0119 18       		.byte	(.L71-.L73)/2
 885 011a 3D       		.byte	(.L72-.L73)/2
 886 011b 00       		.p2align 1
 887              	.L78:
 888              	.LBB2:
 404:RTT/SEGGER_RTT_printf.c ****       case 'c': {
 405:RTT/SEGGER_RTT_printf.c ****         char c0;
 889              		.loc 1 405 9 is_stmt 1 view .LVU290
 406:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 890              		.loc 1 406 9 view .LVU291
 891              		.loc 1 406 11 is_stmt 0 view .LVU292
 892 011c 2B68     		ldr	r3, [r5]
 893              	.LVL86:
 894              		.loc 1 406 11 view .LVU293
 895 011e 1A1D     		adds	r2, r3, #4
 896              	.LVL87:
 897              		.loc 1 406 11 view .LVU294
 898 0120 2A60     		str	r2, [r5]
 407:RTT/SEGGER_RTT_printf.c ****         c0 = (char)v;
 899              		.loc 1 407 9 is_stmt 1 view .LVU295
 900              	.LVL88:
 408:RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 901              		.loc 1 408 9 view .LVU296
 902 0122 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 903 0124 13A8     		add	r0, sp, #76
 904              	.LVL89:
 905              		.loc 1 408 9 is_stmt 0 view .LVU297
 906 0126 FFF7FEFF 		bl	_StoreChar
 907              	.LVL90:
 409:RTT/SEGGER_RTT_printf.c ****         break;
 908              		.loc 1 409 9 is_stmt 1 view .LVU298
 909              	.L71:
 910              		.loc 1 409 9 is_stmt 0 view .LVU299
 911              	.LBE2:
 410:RTT/SEGGER_RTT_printf.c ****       }
 411:RTT/SEGGER_RTT_printf.c ****       case 'd':
 412:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 413:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 414:RTT/SEGGER_RTT_printf.c ****         break;
 415:RTT/SEGGER_RTT_printf.c ****       case 'u':
 416:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 417:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 418:RTT/SEGGER_RTT_printf.c ****         break;
 419:RTT/SEGGER_RTT_printf.c ****       case 'x':
 420:RTT/SEGGER_RTT_printf.c ****       case 'X':
 421:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 422:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 423:RTT/SEGGER_RTT_printf.c ****         break;
 424:RTT/SEGGER_RTT_printf.c ****       case 's':
 425:RTT/SEGGER_RTT_printf.c ****         {
 426:RTT/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 427:RTT/SEGGER_RTT_printf.c ****           do {
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 26


 428:RTT/SEGGER_RTT_printf.c ****             c = *s;
 429:RTT/SEGGER_RTT_printf.c ****             s++;
 430:RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
 431:RTT/SEGGER_RTT_printf.c ****               break;
 432:RTT/SEGGER_RTT_printf.c ****             }
 433:RTT/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 434:RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 435:RTT/SEGGER_RTT_printf.c ****         }
 436:RTT/SEGGER_RTT_printf.c ****         break;
 437:RTT/SEGGER_RTT_printf.c ****       case 'p':
 438:RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 439:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 440:RTT/SEGGER_RTT_printf.c ****         break;
 441:RTT/SEGGER_RTT_printf.c ****       case '%':
 442:RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 443:RTT/SEGGER_RTT_printf.c ****         break;
 444:RTT/SEGGER_RTT_printf.c ****       default:
 445:RTT/SEGGER_RTT_printf.c ****         break;
 446:RTT/SEGGER_RTT_printf.c ****       }
 447:RTT/SEGGER_RTT_printf.c ****       sFormat++;
 912              		.loc 1 447 7 is_stmt 1 view .LVU300
 913              		.loc 1 447 14 is_stmt 0 view .LVU301
 914 012a 0134     		adds	r4, r4, #1
 915              	.LVL91:
 916              	.L80:
 448:RTT/SEGGER_RTT_printf.c ****     } else {
 449:RTT/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 450:RTT/SEGGER_RTT_printf.c ****     }
 451:RTT/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 917              		.loc 1 451 11 is_stmt 1 view .LVU302
 918              		.loc 1 451 22 is_stmt 0 view .LVU303
 919 012c 169B     		ldr	r3, [sp, #88]
 920              		.loc 1 451 3 view .LVU304
 921 012e 002B     		cmp	r3, #0
 922 0130 4CDB     		blt	.L54
 923              	.L81:
 337:RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 924              		.loc 1 337 3 is_stmt 1 view .LVU305
 338:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 925              		.loc 1 338 5 view .LVU306
 338:RTT/SEGGER_RTT_printf.c ****     sFormat++;
 926              		.loc 1 338 7 is_stmt 0 view .LVU307
 927 0132 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 928              	.LVL92:
 339:RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 929              		.loc 1 339 5 is_stmt 1 view .LVU308
 340:RTT/SEGGER_RTT_printf.c ****       break;
 930              		.loc 1 340 5 view .LVU309
 340:RTT/SEGGER_RTT_printf.c ****       break;
 931              		.loc 1 340 8 is_stmt 0 view .LVU310
 932 0136 0029     		cmp	r1, #0
 933 0138 48D0     		beq	.L54
 343:RTT/SEGGER_RTT_printf.c ****       //
 934              		.loc 1 343 5 is_stmt 1 view .LVU311
 343:RTT/SEGGER_RTT_printf.c ****       //
 935              		.loc 1 343 8 is_stmt 0 view .LVU312
 936 013a 2529     		cmp	r1, #37
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 27


 937 013c 3FF46EAF 		beq	.L89
 449:RTT/SEGGER_RTT_printf.c ****     }
 938              		.loc 1 449 7 is_stmt 1 view .LVU313
 939 0140 13A8     		add	r0, sp, #76
 940 0142 FFF7FEFF 		bl	_StoreChar
 941              	.LVL93:
 449:RTT/SEGGER_RTT_printf.c ****     }
 942              		.loc 1 449 7 is_stmt 0 view .LVU314
 943 0146 F1E7     		b	.L80
 944              	.LVL94:
 945              	.L77:
 412:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 946              		.loc 1 412 9 is_stmt 1 view .LVU315
 412:RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 947              		.loc 1 412 11 is_stmt 0 view .LVU316
 948 0148 2968     		ldr	r1, [r5]
 949 014a 0F1D     		adds	r7, r1, #4
 950 014c 2F60     		str	r7, [r5]
 951 014e 0968     		ldr	r1, [r1]
 413:RTT/SEGGER_RTT_printf.c ****         break;
 952              		.loc 1 413 9 is_stmt 1 view .LVU317
 953 0150 0190     		str	r0, [sp, #4]
 954 0152 0092     		str	r2, [sp]
 955 0154 0A22     		movs	r2, #10
 956              	.LVL95:
 413:RTT/SEGGER_RTT_printf.c ****         break;
 957              		.loc 1 413 9 is_stmt 0 view .LVU318
 958 0156 13A8     		add	r0, sp, #76
 959              	.LVL96:
 413:RTT/SEGGER_RTT_printf.c ****         break;
 960              		.loc 1 413 9 view .LVU319
 961 0158 FFF7FEFF 		bl	_PrintInt
 962              	.LVL97:
 414:RTT/SEGGER_RTT_printf.c ****       case 'u':
 963              		.loc 1 414 9 is_stmt 1 view .LVU320
 964 015c E5E7     		b	.L71
 965              	.LVL98:
 966              	.L74:
 416:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 967              		.loc 1 416 9 view .LVU321
 416:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 968              		.loc 1 416 11 is_stmt 0 view .LVU322
 969 015e 2968     		ldr	r1, [r5]
 970 0160 0F1D     		adds	r7, r1, #4
 971 0162 2F60     		str	r7, [r5]
 972 0164 0968     		ldr	r1, [r1]
 417:RTT/SEGGER_RTT_printf.c ****         break;
 973              		.loc 1 417 9 is_stmt 1 view .LVU323
 974 0166 0190     		str	r0, [sp, #4]
 975 0168 0092     		str	r2, [sp]
 976 016a 0A22     		movs	r2, #10
 977              	.LVL99:
 417:RTT/SEGGER_RTT_printf.c ****         break;
 978              		.loc 1 417 9 is_stmt 0 view .LVU324
 979 016c 13A8     		add	r0, sp, #76
 980              	.LVL100:
 417:RTT/SEGGER_RTT_printf.c ****         break;
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 28


 981              		.loc 1 417 9 view .LVU325
 982 016e FFF7FEFF 		bl	_PrintUnsigned
 983              	.LVL101:
 418:RTT/SEGGER_RTT_printf.c ****       case 'x':
 984              		.loc 1 418 9 is_stmt 1 view .LVU326
 985 0172 DAE7     		b	.L71
 986              	.LVL102:
 987              	.L72:
 421:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 988              		.loc 1 421 9 view .LVU327
 421:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 989              		.loc 1 421 11 is_stmt 0 view .LVU328
 990 0174 2968     		ldr	r1, [r5]
 991 0176 0F1D     		adds	r7, r1, #4
 992 0178 2F60     		str	r7, [r5]
 993 017a 0968     		ldr	r1, [r1]
 422:RTT/SEGGER_RTT_printf.c ****         break;
 994              		.loc 1 422 9 is_stmt 1 view .LVU329
 995 017c 0190     		str	r0, [sp, #4]
 996 017e 0092     		str	r2, [sp]
 997 0180 1022     		movs	r2, #16
 998              	.LVL103:
 422:RTT/SEGGER_RTT_printf.c ****         break;
 999              		.loc 1 422 9 is_stmt 0 view .LVU330
 1000 0182 13A8     		add	r0, sp, #76
 1001              	.LVL104:
 422:RTT/SEGGER_RTT_printf.c ****         break;
 1002              		.loc 1 422 9 view .LVU331
 1003 0184 FFF7FEFF 		bl	_PrintUnsigned
 1004              	.LVL105:
 423:RTT/SEGGER_RTT_printf.c ****       case 's':
 1005              		.loc 1 423 9 is_stmt 1 view .LVU332
 1006 0188 CFE7     		b	.L71
 1007              	.LVL106:
 1008              	.L75:
 1009              	.LBB3:
 426:RTT/SEGGER_RTT_printf.c ****           do {
 1010              		.loc 1 426 11 view .LVU333
 426:RTT/SEGGER_RTT_printf.c ****           do {
 1011              		.loc 1 426 24 is_stmt 0 view .LVU334
 1012 018a 2B68     		ldr	r3, [r5]
 1013              	.LVL107:
 426:RTT/SEGGER_RTT_printf.c ****           do {
 1014              		.loc 1 426 24 view .LVU335
 1015 018c 1A1D     		adds	r2, r3, #4
 1016              	.LVL108:
 426:RTT/SEGGER_RTT_printf.c ****           do {
 1017              		.loc 1 426 24 view .LVU336
 1018 018e 2A60     		str	r2, [r5]
 1019 0190 1F68     		ldr	r7, [r3]
 1020              	.LVL109:
 1021              	.L79:
 427:RTT/SEGGER_RTT_printf.c ****             c = *s;
 1022              		.loc 1 427 11 is_stmt 1 view .LVU337
 428:RTT/SEGGER_RTT_printf.c ****             s++;
 1023              		.loc 1 428 13 view .LVU338
 428:RTT/SEGGER_RTT_printf.c ****             s++;
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 29


 1024              		.loc 1 428 15 is_stmt 0 view .LVU339
 1025 0192 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1026              	.LVL110:
 429:RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
 1027              		.loc 1 429 13 is_stmt 1 view .LVU340
 430:RTT/SEGGER_RTT_printf.c ****               break;
 1028              		.loc 1 430 13 view .LVU341
 430:RTT/SEGGER_RTT_printf.c ****               break;
 1029              		.loc 1 430 16 is_stmt 0 view .LVU342
 1030 0196 0029     		cmp	r1, #0
 1031 0198 C7D0     		beq	.L71
 433:RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1032              		.loc 1 433 12 is_stmt 1 view .LVU343
 1033 019a 13A8     		add	r0, sp, #76
 1034 019c FFF7FEFF 		bl	_StoreChar
 1035              	.LVL111:
 434:RTT/SEGGER_RTT_printf.c ****         }
 1036              		.loc 1 434 19 view .LVU344
 434:RTT/SEGGER_RTT_printf.c ****         }
 1037              		.loc 1 434 30 is_stmt 0 view .LVU345
 1038 01a0 169B     		ldr	r3, [sp, #88]
 434:RTT/SEGGER_RTT_printf.c ****         }
 1039              		.loc 1 434 11 view .LVU346
 1040 01a2 002B     		cmp	r3, #0
 1041 01a4 F5DA     		bge	.L79
 1042 01a6 C0E7     		b	.L71
 1043              	.LVL112:
 1044              	.L76:
 434:RTT/SEGGER_RTT_printf.c ****         }
 1045              		.loc 1 434 11 view .LVU347
 1046              	.LBE3:
 438:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1047              		.loc 1 438 9 is_stmt 1 view .LVU348
 438:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1048              		.loc 1 438 11 is_stmt 0 view .LVU349
 1049 01a8 2B68     		ldr	r3, [r5]
 1050              	.LVL113:
 438:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1051              		.loc 1 438 11 view .LVU350
 1052 01aa 1A1D     		adds	r2, r3, #4
 1053              	.LVL114:
 438:RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1054              		.loc 1 438 11 view .LVU351
 1055 01ac 2A60     		str	r2, [r5]
 1056 01ae 1968     		ldr	r1, [r3]
 439:RTT/SEGGER_RTT_printf.c ****         break;
 1057              		.loc 1 439 9 is_stmt 1 view .LVU352
 1058 01b0 0023     		movs	r3, #0
 1059 01b2 0193     		str	r3, [sp, #4]
 1060 01b4 0823     		movs	r3, #8
 1061 01b6 0093     		str	r3, [sp]
 1062 01b8 1022     		movs	r2, #16
 1063 01ba 13A8     		add	r0, sp, #76
 1064              	.LVL115:
 439:RTT/SEGGER_RTT_printf.c ****         break;
 1065              		.loc 1 439 9 is_stmt 0 view .LVU353
 1066 01bc FFF7FEFF 		bl	_PrintUnsigned
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 30


 1067              	.LVL116:
 440:RTT/SEGGER_RTT_printf.c ****       case '%':
 1068              		.loc 1 440 9 is_stmt 1 view .LVU354
 1069 01c0 B3E7     		b	.L71
 1070              	.LVL117:
 1071              	.L70:
 442:RTT/SEGGER_RTT_printf.c ****         break;
 1072              		.loc 1 442 9 view .LVU355
 1073 01c2 2521     		movs	r1, #37
 1074              	.LVL118:
 442:RTT/SEGGER_RTT_printf.c ****         break;
 1075              		.loc 1 442 9 is_stmt 0 view .LVU356
 1076 01c4 13A8     		add	r0, sp, #76
 1077              	.LVL119:
 442:RTT/SEGGER_RTT_printf.c ****         break;
 1078              		.loc 1 442 9 view .LVU357
 1079 01c6 FFF7FEFF 		bl	_StoreChar
 1080              	.LVL120:
 443:RTT/SEGGER_RTT_printf.c ****       default:
 1081              		.loc 1 443 9 is_stmt 1 view .LVU358
 1082 01ca AEE7     		b	.L71
 1083              	.L54:
 452:RTT/SEGGER_RTT_printf.c **** 
 453:RTT/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1084              		.loc 1 453 3 view .LVU359
 1085              		.loc 1 453 17 is_stmt 0 view .LVU360
 1086 01cc 169B     		ldr	r3, [sp, #88]
 1087              		.loc 1 453 6 view .LVU361
 1088 01ce 002B     		cmp	r3, #0
 1089 01d0 05DD     		ble	.L82
 454:RTT/SEGGER_RTT_printf.c ****     //
 455:RTT/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 456:RTT/SEGGER_RTT_printf.c ****     //
 457:RTT/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1090              		.loc 1 457 5 is_stmt 1 view .LVU362
 1091              		.loc 1 457 19 is_stmt 0 view .LVU363
 1092 01d2 159A     		ldr	r2, [sp, #84]
 1093              		.loc 1 457 8 view .LVU364
 1094 01d4 32B9     		cbnz	r2, .L90
 1095              	.L83:
 458:RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 459:RTT/SEGGER_RTT_printf.c ****     }
 460:RTT/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1096              		.loc 1 460 5 is_stmt 1 view .LVU365
 1097              		.loc 1 460 28 is_stmt 0 view .LVU366
 1098 01d6 159A     		ldr	r2, [sp, #84]
 1099 01d8 169B     		ldr	r3, [sp, #88]
 1100 01da 1344     		add	r3, r3, r2
 1101 01dc 1693     		str	r3, [sp, #88]
 1102              	.L82:
 461:RTT/SEGGER_RTT_printf.c ****   }
 462:RTT/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1103              		.loc 1 462 3 is_stmt 1 view .LVU367
 463:RTT/SEGGER_RTT_printf.c **** }
 1104              		.loc 1 463 1 is_stmt 0 view .LVU368
 1105 01de 1698     		ldr	r0, [sp, #88]
 1106 01e0 19B0     		add	sp, sp, #100
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 31


 1107              	.LCFI8:
 1108              		.cfi_remember_state
 1109              		.cfi_def_cfa_offset 20
 1110              		@ sp needed
 1111 01e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1112              	.LVL121:
 1113              	.L90:
 1114              	.LCFI9:
 1115              		.cfi_restore_state
 458:RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1116              		.loc 1 458 7 is_stmt 1 view .LVU369
 1117 01e4 03A9     		add	r1, sp, #12
 1118 01e6 3046     		mov	r0, r6
 1119 01e8 FFF7FEFF 		bl	SEGGER_RTT_Write
 1120              	.LVL122:
 1121 01ec F3E7     		b	.L83
 1122              		.cfi_endproc
 1123              	.LFE3:
 1125 01ee 00BF     		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1126              		.align	1
 1127              		.global	SEGGER_RTT_printf
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1132              	SEGGER_RTT_printf:
 1133              	.LVL123:
 1134              	.LFB4:
 464:RTT/SEGGER_RTT_printf.c **** 
 465:RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 466:RTT/SEGGER_RTT_printf.c **** *
 467:RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 468:RTT/SEGGER_RTT_printf.c **** *
 469:RTT/SEGGER_RTT_printf.c **** *  Function description
 470:RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 471:RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 472:RTT/SEGGER_RTT_printf.c **** *
 473:RTT/SEGGER_RTT_printf.c **** *  Parameters
 474:RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 475:RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 476:RTT/SEGGER_RTT_printf.c **** *
 477:RTT/SEGGER_RTT_printf.c **** *  Return values
 478:RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 479:RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 480:RTT/SEGGER_RTT_printf.c **** *
 481:RTT/SEGGER_RTT_printf.c **** *  Notes
 482:RTT/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 483:RTT/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 484:RTT/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 485:RTT/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 486:RTT/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 487:RTT/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 488:RTT/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 489:RTT/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 490:RTT/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 491:RTT/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 492:RTT/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 493:RTT/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 32


 494:RTT/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 495:RTT/SEGGER_RTT_printf.c **** */
 496:RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1135              		.loc 1 496 72 view -0
 1136              		.cfi_startproc
 1137              		@ args = 4, pretend = 12, frame = 8
 1138              		@ frame_needed = 0, uses_anonymous_args = 1
 1139              		.loc 1 496 72 is_stmt 0 view .LVU371
 1140 0000 0EB4     		push	{r1, r2, r3}
 1141              	.LCFI10:
 1142              		.cfi_def_cfa_offset 12
 1143              		.cfi_offset 1, -12
 1144              		.cfi_offset 2, -8
 1145              		.cfi_offset 3, -4
 1146 0002 00B5     		push	{lr}
 1147              	.LCFI11:
 1148              		.cfi_def_cfa_offset 16
 1149              		.cfi_offset 14, -16
 1150 0004 82B0     		sub	sp, sp, #8
 1151              	.LCFI12:
 1152              		.cfi_def_cfa_offset 24
 1153 0006 03AB     		add	r3, sp, #12
 1154 0008 53F8041B 		ldr	r1, [r3], #4
 497:RTT/SEGGER_RTT_printf.c ****   int r;
 1155              		.loc 1 497 3 is_stmt 1 view .LVU372
 498:RTT/SEGGER_RTT_printf.c ****   va_list ParamList;
 1156              		.loc 1 498 3 view .LVU373
 499:RTT/SEGGER_RTT_printf.c **** 
 500:RTT/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1157              		.loc 1 500 3 view .LVU374
 1158 000c 0193     		str	r3, [sp, #4]
 501:RTT/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1159              		.loc 1 501 3 view .LVU375
 1160              		.loc 1 501 7 is_stmt 0 view .LVU376
 1161 000e 01AA     		add	r2, sp, #4
 1162 0010 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1163              	.LVL124:
 502:RTT/SEGGER_RTT_printf.c ****   va_end(ParamList);
 1164              		.loc 1 502 3 is_stmt 1 view .LVU377
 503:RTT/SEGGER_RTT_printf.c ****   return r;
 1165              		.loc 1 503 3 view .LVU378
 504:RTT/SEGGER_RTT_printf.c **** }
 1166              		.loc 1 504 1 is_stmt 0 view .LVU379
 1167 0014 02B0     		add	sp, sp, #8
 1168              	.LCFI13:
 1169              		.cfi_def_cfa_offset 16
 1170              		@ sp needed
 1171 0016 5DF804EB 		ldr	lr, [sp], #4
 1172              	.LCFI14:
 1173              		.cfi_restore 14
 1174              		.cfi_def_cfa_offset 12
 1175 001a 03B0     		add	sp, sp, #12
 1176              	.LCFI15:
 1177              		.cfi_restore 3
 1178              		.cfi_restore 2
 1179              		.cfi_restore 1
 1180              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 33


 1181 001c 7047     		bx	lr
 1182              		.cfi_endproc
 1183              	.LFE4:
 1185              		.section	.rodata._aV2C.0,"a"
 1186              		.align	2
 1187              		.set	.LANCHOR0,. + 0
 1190              	_aV2C.0:
 1191 0000 30313233 		.ascii	"0123456789ABCDEF"
 1191      34353637 
 1191      38394142 
 1191      43444546 
 1192              		.text
 1193              	.Letext0:
 1194              		.file 2 "e:\\devtools\\armtoolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stdarg.
 1195              		.file 3 "<built-in>"
 1196              		.file 4 "RTT/SEGGER_RTT.h"
ARM GAS  C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:18     .text._StoreChar:00000000 $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:23     .text._StoreChar:00000000 _StoreChar
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:111    .text._PrintUnsigned:00000000 $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:116    .text._PrintUnsigned:00000000 _PrintUnsigned
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:342    .text._PrintUnsigned:000000dc $d
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:347    .text._PrintInt:00000000 $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:352    .text._PrintInt:00000000 _PrintInt
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:580    .text.SEGGER_RTT_vprintf:00000000 $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:586    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:715    .text.SEGGER_RTT_vprintf:00000054 $d
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:730    .text.SEGGER_RTT_vprintf:0000008c $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:853    .text.SEGGER_RTT_vprintf:000000fa $d
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:1126   .text.SEGGER_RTT_printf:00000000 $t
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:1132   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:1186   .rodata._aV2C.0:00000000 $d
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:1190   .rodata._aV2C.0:00000000 _aV2C.0
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:886    .text.SEGGER_RTT_vprintf:0000011b $d
C:\Users\wizar\AppData\Local\Temp\cchs2G9F.s:886    .text.SEGGER_RTT_vprintf:0000011c $t

UNDEFINED SYMBOLS
SEGGER_RTT_Write
